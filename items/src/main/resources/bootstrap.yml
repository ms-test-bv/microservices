spring:
  cloud:
    config:
      uri: http://${CONFIG_SERVER:config-service}:${CONFIG_SERVER_PORT:9001}/ # Connection URL
      fail-fast: true # Don't fail at first call more or less
      retry:
        initial-interval: 2000 # retry interval
        max-attempts: 10 # maxima cantidad de intentos para terminar la conexion
      profile: dev # perfil a utilizar
  application:
    name: items # Nombre de la aplicaci√≥n
  config:
    import: configserver:http://${CONFIG_SERVER:config-service}:${CONFIG_SERVER_PORT:9001} # Configuracion de spring boot para referirse al config server

eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_SERVER:eureka-service}:${EUREKA_PORT:9000}/eureka/
  instance:
    preferIpAddress: true

management:
  endpoints:
    web:
      exposure:
        include: refresh # Activar el endpoint de refresh. De esta forma podemos volver a realizar peticiones al server de configuracion
  tracing:
    enabled: true
    sampling:
      probability: 1.0